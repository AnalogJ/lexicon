[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dns-lexicon"
version = "3.18.0"
description = "Manipulate DNS records on various DNS providers in a standardized/agnostic way"
license = "MIT"
keywords = [
    "dns", "lexicon", "dns-lexicon", "dehydrated", "letsencrypt",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: Name Service (DNS)",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
authors = [
    { name = "Jason Kulatunga", email = "jason@thesparktree.com" },
    { name = "Adrien Ferrand", email = "ferrand.ad@gmail.com" },
]
readme = "README.rst"

requires-python = "< 3.14, >=3.9"
dependencies = [
    "tldextract >= 2",
    "cryptography >= 2",
    "pyyaml >= 3",
    "requests >= 2",
    "beautifulsoup4 >= 4",
    "pyotp >= 2",
    "dnspython >= 2",
    "importlib-metadata >= 4.6; python_version < '3.10'",
]

[project.optional-dependencies]
route53 = ["boto3 >= 1.28"]
localzone = ["localzone >= 0.9.8"]
softlayer = ["softlayer >= 5"]
gransy = ["zeep >= 3"]
oci = ["oci >= 2"]
qcloud = ["tencentcloud-sdk-python >= 3"]
full = [
    "boto3 >= 1.28",
    "localzone >= 0.9.8",
    "softlayer >= 5",
    "zeep >= 3",
    "oci >= 2",
    "tencentcloud-sdk-python >= 3",
]

[dependency-groups]
dev = [
    "esbonio",
    "packaging",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "vcrpy",
    # We add flake8 conditionally to recent Python version to get modern versions
    # of flake8 cleaned of several issues. It just means that linting cannot be done
    # on the initial release of Python 3.8 (version 3.8.0). This is a decent constraint.
    "flake8; python_version >= '3.8.1'",
    "isort",
    "tox >= 4",
    "tox-uv",
    "black",
    "mypy",
    "toml",
    "types-PyYAML",
    "types-requests",
    "types-toml",
]
doc = [
    "sphinx",
    "sphinx_rtd_theme",
    "toml",
]

[project.scripts]
lexicon = "lexicon._private.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/lexicon"]

[tool.pytest.ini_options]
junit_family = "xunit2"
filterwarnings = [
    # Fail for any warning, except...
    "error",
    # CGI, a transitive dependency for zeep (used by Gransy provider)
    # is deprecated. Let zeep manage that by Python 3.13.
    "ignore:'cgi' is deprecated:DeprecationWarning",
    # Ignore our own deprecation warnings.
    "ignore:Method execute\\(\\) is deprecated:DeprecationWarning",
    # Ignore deprecation warnings from datetime used by our third-party libraries.
    "ignore:.*datetime\\.utcnow\\(\\) is deprecated:DeprecationWarning",
    "ignore:.*datetime\\.utcfromtimestamp\\(\\) is deprecated:DeprecationWarning",
    # Ignore deprecation usages of urllib3 in boto
    "ignore:The 'strict' parameter is no longer needed on Python 3+:DeprecationWarning",
]

[tool.mypy]
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.isort]
profile = "black"
