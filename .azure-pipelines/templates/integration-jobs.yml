jobs:
  - job: test
    variables:
      IMAGE: ubuntu-22.04
      TOXENV: py
      PYTEST_ADDOPTS: --numprocesses 4
      BRANCH_NAME: $(Build.SourceBranch)
    strategy:
      matrix:
        linux-python-3.8:
          PYTHON_VERSION: 3.8
        linux-python-3.11-light:
          PYTHON_VERSION: 3.11
          TOXENV: light
        linux-python-3.11-cover:
          PYTHON_VERSION: 3.11
          TOXENV: cover
        linux-lint:
          PYTHON_VERSION: 3.11
          TOXENV: lint
        linux-mypy:
          PYTHON_VERSION: 3.11
          TOXENV: mypy
        macos-python-3.8:
          IMAGE: macos-11
          PYTHON_VERSION: 3.8
        macos-python-3.11:
          IMAGE: macos-11
          PYTHON_VERSION: 3.11
        windows-python-3.8:
          IMAGE: windows-2019
          PYTHON_VERSION: 3.8
        windows-python-3.11:
          IMAGE: windows-2019
          PYTHON_VERSION: 3.11
    pool:
      vmImage: $(IMAGE)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(PYTHON_VERSION)
          addToPath: true
        displayName: Enable the targeted python version
      - script: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          python3 -m pipx install tox
          python3 -m pipx install poetry
        displayName: Install required runtime dependencies
      - script: tox
        displayName: Execute tests through tox
      - script: |
          python3 -m pipx install coveralls
          coveralls
        condition: and(eq(variables['TOXENV'], 'cover'), eq(variables['Build.DefinitionName'], 'main'))
        env:
          COVERALLS_SERVICE_NAME: azure-pipelines
          COVERALLS_REPO_TOKEN: $(coveralls_repo_token)
        displayName: Publish coverage reports (Coveralls)
      - task: PublishCodeCoverageResults@1
        condition: eq(variables['TOXENV'], 'cover')
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
        displayName: Publish coverage reports (Azure Pipelines)
      - task: PublishTestResults@2
        condition: ne(variables['TOXENV'], 'lint')
        inputs:
          testResultsFiles: '**/test-*.xml'
          testRunTitle: 'Publish test results for Python $(PYTHON_VERSION) on $(IMAGE)'
        displayName: Publish tests reports
  - job: package
    strategy:
      matrix:
        linux:
          IMAGE: ubuntu-20.04
          TARGET_TRIPLE: x86_64-unknown-linux-gnu
        macos:
          IMAGE: macos-11
          TARGET_TRIPLE: x86_64-apple-darwin
        windows:
          IMAGE: windows-2019
          TARGET_TRIPLE: x86_64-pc-windows-msvc
    pool:
      vmImage: $(IMAGE)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.10
          addToPath: true
        displayName: Enable the targeted python version
      - script: python -m pip install -U tox poetry
        displayName: Install required runtime dependencies
      - script: |
          set -e
          poetry install
          poetry run pyoxidizer build --release
        displayName: Build Lexicon executable
      - publish: $(System.DefaultWorkingDirectory)/build/$(TARGET_TRIPLE)/release/install
        artifact: executable-$(TARGET_TRIPLE)
  - job: trigger_readthedoc
    pool:
      vmImage: ubuntu-22.04
    steps:
      - bash: curl -X POST -d "branches=`echo "refs/tags/$(Build.SourceBranchName)" | sed 's|refs/.*/||g'`" -d "token=$(RTD_TOKEN)" $(RTD_URL)
    condition: or(and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.DefinitionName'], 'main')), eq(variables['Build.DefinitionName'], 'release'))
