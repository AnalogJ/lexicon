jobs:
  - job: test
    variables:
      IMAGE: ubuntu-latest
      TOXENV: py
      PYTEST_ADDOPTS: --numprocesses 4
      BRANCH_NAME: $(Build.SourceBranch)
    strategy:
      matrix:
        linux-python-3.9:
          UV_PYTHON: 3.9
        linux-python-3.13-light:
          UV_PYTHON: 3.13
          TOXENV: light
        linux-python-3.13-cover:
          UV_PYTHON: 3.13
          TOXENV: cover
        linux-lint:
          UV_PYTHON: 3.13
          TOXENV: lint
        linux-mypy:
          UV_PYTHON: 3.13
          TOXENV: mypy
        macos-python-3.9:
          IMAGE: macOS-latest
          UV_PYTHON: 3.9
        macos-python-3.13:
          IMAGE: macOS-latest
          UV_PYTHON: 3.13
        windows-python-3.9:
          IMAGE: windows-latest
          UV_PYTHON: 3.9
        windows-python-3.13:
          IMAGE: windows-latest
          UV_PYTHON: 3.13
    pool:
      vmImage: $(IMAGE)
    steps:
      - script: pipx install uv
        displayName: Install UV
      - script: uvx --with tox-uv tox
        displayName: Execute tests through tox
      - script: uvx coveralls
        condition: and(eq(variables['TOXENV'], 'cover'), eq(variables['Build.DefinitionName'], 'main'))
        env:
          COVERALLS_SERVICE_NAME: azure-pipelines
          COVERALLS_REPO_TOKEN: $(coveralls_repo_token)
        displayName: Publish coverage reports (Coveralls)
      - task: PublishCodeCoverageResults@2
        condition: eq(variables['TOXENV'], 'cover')
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
        displayName: Publish coverage reports (Azure Pipelines)
      - task: PublishTestResults@2
        condition: ne(variables['TOXENV'], 'lint')
        inputs:
          testResultsFiles: '**/test-*.xml'
          testRunTitle: 'Publish test results for Python $(PYTHON_VERSION) on $(IMAGE)'
        displayName: Publish tests reports
  - job: trigger_readthedoc
    pool:
      vmImage: ubuntu-22.04
    steps:
      - bash: curl -X POST -d "branches=`echo "refs/tags/$(Build.SourceBranchName)" | sed 's|refs/.*/||g'`" -d "token=$(RTD_TOKEN)" $(RTD_URL)
    condition: or(and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.DefinitionName'], 'main')), eq(variables['Build.DefinitionName'], 'release'))
